:: StoryTitle
Spuk & Schreck

:: StoryData
{
  "ifid": "FB483649-96B3-4F0F-9531-A1D615413B45",
  "format": "SugarCube",
  "format-version": "2.36.1",
  "start": "setup.0",
  "tag-colors": {},
  "zoom": 0.6
}

:: story.init {"position":"1700,600","size":"100,100"}
<<script>>
  $('#story').attr('style', `background-image:url(images/story.init.${State.variables.hotspot}.jpg)`);
<</script>>

<div class="wrapper">
  <h1><<txt>></h1>
  <h2><<txt>></h2>
  <p class="p3">para</p>
  </div>

  <div class="btn-group">
    <button class="next">[[|story.1]]<<audio "click" play>></button>
  </div>


:: story.1 {"position":"1700,800","size":"100,100"}
<<script>>
  $(document).one(":passagedisplay", function() {
    window.video.showButtonsOnVideoEnd();
    document.getElementById('myVideo').src = `videos/story.1.${State.variables.hotspot}.mp4`;
    document.getElementById('myVideo').load();
    document.getElementById('myVideo').play();
  })
<</script>>

  <video autoplay muted id="myVideo" playsinline>
    <source type="video/mp4">
  </video>

  <div class="wrapper"></div>

  <div class="btn-group">
    <button class="retry">[[|story.1]]<<audio "click" play>></button>
    <button class="next">[[|1.2]]<<audio "click" play>></button>
  </div>


:: 1.2 {"position":"1700,1000","size":"100,100"}
<<if $riddle is 1>>
    <script>
      $('#story').attr('style', 'background-image:url(images/1.1.jpg)');
    </script>
    <<elseif $riddle is 2>>
    <script>
      $('#story').attr('style', 'background-image:url(images/kapitel.jpg)');
    </script>
  <</if>>

  <<if $riddle is 1>>
    <span id="heading">
      <h2>Finde dieses Bild. Was befindet sich darüber?</h2>
    </span>

    <div class="wrapper"></div>

    <div class="btn-group">
      <<button "Lilie">>
        <<replace "#heading">><h2>Falsch!</h2><</replace>>
        <<timed 1s>>
          <<goto "1.2">>
          <<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>

      <<button "Sanduhr">>
        <<replace "#heading">><h2>Falsch!</h2><</replace>>
        <<timed 1s>>
          <<goto "1.2">>
          <<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>

      <<button "Muschel">>
        <<replace "#heading">><h2>Richtig! +10 Punkte</h2><</replace>>
        <<timed 1s>>
          <<goto "1.2">>
          <<set $points to $points +10>>
          <<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>
    </div>
  <</if>>

  <<if $riddle is 2>>
    <div class="wrapper">
      <h1>Okkulte<br>Rune</h1>
      <p class="p2">A</p>
    </div>

    <div class="btn-group">
      <<button "Weiter">>
        <<goto "1.3">>
        <<set $riddle to 1>>
        <<set $letter[$hotspot] to 1>>
        <<audio "click" play>>  
      <</button>>
    </div>
  <</if>>


:: 1.3 {"position":"1700,1200","size":"100,100"}
<<script>>
  window.video.showButtonsOnVideoEnd();
<</script>>

  <video autoplay muted id="myVideo" playsinline>
    <source src="videos/1.3.mp4" type="video/mp4">
  </video>

  <div class="wrapper"></div>

  <div class="btn-group">
   <button class="retry">[[|1.3]]<<audio "click" play>></button>
    <button class="next">[[|1.4]]<<audio "click" play>></button>
  </div>


:: 1.4 {"position":"1700,1400","size":"100,100"}
<div class="wrapper">
  <h1>AR-Kamera</h1>
  <model-viewer id="model-viewer" src="models/witch/witch.glb" ar auto-rotate poster="models/witch/poster.webp" 
    autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
    alt="A witch" camera-controls>
    <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
    </model-viewer>
  <h2>Öffne die Kamera und betrachte die Szene. Mache Fotos von allem was dir wichtig erscheint.</h2>
  </div>

  <div class="btn-group">
<button class="next">[[|1.5]]<<audio "click" play>></button>
  </div>


:: 1.5 {"position":"1700,1600","size":"100,100"}
<<script>>
  window.video.showButtonsOnVideoEnd();
<</script>>

  <<audio ":playing:" stop>>

  <video autoplay muted id="myVideo" playsinline>
    <source src="videos/1.5.mp4" type="video/mp4">
  </video>

  <div class="wrapper"></div>

  <div class="btn-group">
   <button class="retry">[[|1.5]]<<audio "click" play>></button>
    <button class="next">[[|2.7]]<<audio "click" play>></button>
  </div>

:: 2.2 {"position":"1900,1000","size":"100,100"}
<script>
  $('#story').attr('style', 'background-image:url(images/cam.jpg)');
</script>

<div class="wrapper">
  <h1>AR-Kamera</h1>
  <model-viewer id="model-viewer" src="models/witch/witch.glb" ar auto-rotate poster="models/witch/poster.webp" 
    autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
    alt="A witch" camera-controls>
    <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <h2>Öffne die Kamera und betrachte die Szene. Mache Fotos von allem was dir wichtig erscheint.</h2>
  </div>

  <div class="btn-group">
    <button class="return">[[|2.1]]<<audio "click" play>></button>
    <button class="next">[[|2.3]]<<audio "click" play>></button>
  </div>


:: 2.3 {"position":"1900,1200","size":"100,100"}
<<script>>
  window.video.showButtonsOnVideoEnd();
<</script>>

  <video autoplay muted id="myVideo" playsinline>
    <source src="videos/2.3.mp4" type="video/mp4">
  </video>

  <div class="wrapper"></div>

  <div class="btn-group">
   <button class="retry">[[|2.3]]<<audio "click" play>></button>
    <button class="next">[[|2.4]]<<audio "click" play>></button>
  </div>


:: 2.4 {"position":"1900,1400","size":"100,100"}
<script>
      $('#story').attr('style', 'background-image:url(images/holger.bg.jpg)');
    </script>

  <<if $riddle is 1>>
    <span id="heading">
    <h1>Frage 1</h1>
      <h2>Was für ein Gerät stand in der Szene?</h2>
    </span>

    <div class="wrapper"></div>

    <div class="btn-group">
      <<button "Walkie-Talkie">>
        <<replace "#heading">><h1>Falsch!</h1><h2>Keine Punkte</h2><</replace>>
        <<timed 1s>>
          <<goto "2.4">>
          <<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>

      <<button "Häxler">>
        <<replace "#heading">><h1>Falsch!</h1><h2>Keine Punkte</h2><</replace>>
        <<timed 1s>>
          <<goto "2.4">>
          <<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>

      <<button "Grammophon">>
        <<replace "#heading">><h1>Richtig!</h1><h2>+10 Punkte</h2><</replace>>
        <<timed 1s>>
          <<goto "2.4">>
          <<set $points to $points +10>>
          <<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>
    </div>
  <</if>>

  <<if $riddle is 2>>
    <span id="heading">
    <h1>Frage 2</h1>
      <h2>Was für ein Gegenstand lag im Vogelbad?</h2>
    </span>

    <div class="wrapper"></div>

    <div class="btn-group">
      <<button "Haarspange">>
        <<replace "#heading">><h1>Falsch!</h1><h2>Keine Punkte</h2><</replace>>
        <<timed 1s>>
          <<goto "2.4">><<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>

      <<button "Schlüssel">>
        <<replace "#heading">><h1>Richtig!</h1><h2>+10 Punkte</h2><</replace>>
        <<timed 1s>>
          <<goto "2.4">>
          <<set $points to $points +10>>
          <<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>

      <<button "Brosche">>
        <<replace "#heading">><h1>Falsch!</h1><h2>Keine Punkte</h2><</replace>>
        <<timed 1s>>
          <<goto "2.4">>
          <<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>
    </div>
  <</if>>

  <<if $riddle is 3>>
    <span id="heading">
    <h1>Frage 3</h1>
      <h2>Was lag neben dem Brunnen?</h2>
    </span>

    <div class="wrapper"></div>
        
    <div class="btn-group">
      <<button "Ketten">>
        <<replace "#heading">><h1>Richtig!</h1><h2>+10 Punkte</h2><</replace>>
        <<timed 1s>>
          <<goto "2.4">>
          <<set $points to $points +10>>
          <<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>
          
      <<button "Flaschen">>
        <<replace "#heading">><h1>Falsch!</h1><h2>Keine Punkte</h2><</replace>>
        <<timed 1s>>
          <<goto "2.4">>
          <<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>

      <<button "Gliedmaßen">>
        <<replace "#heading">><h1>Falsch!</h1><h2>Keine Punkte</h2><</replace>>
        <<timed 1s>>
          <<goto "2.4">>
          <<set $riddle to $riddle + 1>>
        <</timed>>
      <</button>>
    </div>
  <</if>>

  <<if $riddle is 4>>
    <div class="wrapper">
      <h1>Okkulte Rune</h1>
      <h2>Du hast eine okkulte Rune entdeckt.</h2>
      <p class="p2">A</p>
    </div>

    <div class="btn-group">
      <<button "Weiter">>
        <<goto "2.5">>
        <<set $riddle to 1>>
        <<set $letter[$hotspot] to 1>>
        <<audio "click" play>>  
      <</button>>
    </div>
  <</if>>


:: 2.5 {"position":"1900,1600","size":"100,100"}
<<script>>
  window.video.showButtonsOnVideoEnd();
<</script>>

  <video autoplay muted id="myVideo" playsinline>
    <source src="videos/2.5.mp4" type="video/mp4">
  </video>

  <div class="wrapper"></div>

  <div class="btn-group">
    <button class="retry">[[|2.5]]<<audio "click" play>></button>
    <button class="next">[[|2.6]]<<audio "click" play>></button>
  </div>


:: 2.6 {"position":"1900,1800","size":"100,100"}
<<script>>
  window.video.showButtonsOnVideoEnd();
<</script>>

  <video autoplay muted id="myVideo" playsinline>
    <source src="videos/2.6.mp4" type="video/mp4">
  </video>

  <div class="wrapper"></div>

  <div class="btn-group">
    <button class="return">[[|2.5]]<<audio "click" play>></button>
    <button class="retry">[[|2.6]]<<audio "click" play>></button>
    <button class="next">[[|2.7]]<<audio "click" play>></button>
  </div>


:: 2.7 {"position":"1900,2000","size":"100,100"}
<div
 class="wrapper">
  <h1>Unser Ziel</h1>
  <h2>Wir wollen ein Team-Event kreieren, bei dem sich die Menschen draußen an der frischen Luft bewegen, zusammen arbeiten, um Rätsel zu lösen und mit Hilfe moderner Technik in neue gruselige Welten eintauchen. 
  <br>
  <br>Unser Ziel ist Ostern 2024 die erste Rallye im Friedenspark, Leipzig zu veröffentlichen. Weitere Städte werden folgen. 
  <br>
  <br>Unsere Rallye wird ausschließlich auf den Smartphones unserer Kunden gespielt. Es gibt keinen Guide vor Ort. Daher ist es uns sehr wichtig, dass die Technik gut funktioniert. 
  <br>
  <br>
  Um zu evaluieren, ob uns das gelingt benötigen wir dein Feedback. Über diesen <a href="https://forms.gle/jcGPPbrbbnwDLNC28">"Link"</a>  erreichst du unseren Fragebogen. Vielen Dank. 
</h2>
</div>

<div class="btn-group">

</div>


:: Dev {"position":"200,1200","size":"100,100"}
<div class="wrapper">
  <div class="btn-group">
    <<button "1.0">>
      <<set $hotspot to 1>>
      <<goto "story.init">>	
    <</button>>
    <<button "2.0">>
      <<set $hotspot to 2>>
      <<goto "story.init">>	
    <</button>>
    <<set $mapText = setup.text['Dev'][1][setup.i18n.langs[settings.lang]]>>
    <<button $mapText>>
      <<goto "map.init">>	
    <</button>>
    <button class="return">[[|setup.0]]<<audio "click" play>></button>
  </div>
</div>


:: Hilfe {"position":"200,800","size":"100,100"}
<div class="wrapper">
  <h1>Hilfe</h1>
  <h2>Erkunde die Stationen auf der Karte, um geheime Geister zu 
    finden und Buchstaben für das Lösungswort zu sammeln.</h2>
  <details>
    <summary>
      <h5>Wo finde ich meinen Spielfortschritt?</h5>
    </summary>
    <div>
      <p>Deinen Spielfortschritt kannst du im
      <<link "Seitenmenü">>
	      <<script>>UIBar.unstow().show()<</script>>
      <</link>>
      einsehen.</p>
    </div>
  </details>
  <details>
    <summary>
      <h5>Was passiert, wenn ich das Lösungswort vollständig erraten habe?</h5>
    </summary>
    <div>
      <p>Sed non urna. Donec et ante. Phasellus eu ligula. Vestibulum sit amet purus.</p>
    </div>
  </details>
  <details>
    <summary>
      <h5>Benötigt jeder Mitspielende ein eigenes Handy?</h5>
    </summary>
    <div>
      <p>Wir empfehlen das Spiel als Gruppe mit einem Handy zu spielen.
      Natürlich könnte ihr aber auch jeder alleine mit einem Handy losziehen.
      Es gibt keine vorgeschriebene Reihenfolge für die Stationen. 
      Am Ende könnt ihr vergleichen, wer mehr Punkte und Geister gesammelt hat.</p>
    </div>
  </details>
  <details>
    <summary>
      <h5>Wie kann ich die Rätsel lösen?</h5>
    </summary>
    <div>
      <p>Die Rätsel im Spiel können nur durch genaues Absuchen eurer Umgebung gelöst werden.
      Findet die Orte auf dem Bild und studiert sie genau.
      Dann findet ihr die Antwort. </p>
    </div>
  </details>
</div>

<div class="btn-group">
  <<return>>
</div>


:: Impressum {"position":"200,1000","size":"100,100"}
<div class="wrapper">
  <h1><<txt>></h1>
</div>

<div class="btn-group">

<<button "Zurück">>
  <<goto "setup.0">>
	<<audio "click" play>>
<</button>>	

</div>


:: Inventar {"position":"200,600","size":"100,100"}
<div class="wrapper">
  <h1>Geister</h1>
  <h2>Hier werden alle Geister angezeigt, die du mit der AR-Kamera eingefangen hast.</h2>
  <<if $affe is 1>>
    <model-viewer id="model-viewer" src="models/witch/witch.glb" ar auto-rotate poster="models/witch/poster.webp" 
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a witch with graveyard" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
    </model-viewer>
  <</if>>
  <<if $flamingo is 1>>
      <model-viewer id="model-viewer" src="models/hanging/hanging.glb" ar auto-rotate poster="models/hanging/poster.webp" 
        autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
        alt="A 3D model of a hanging scene" camera-controls>
        <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
      </model-viewer>
  <</if>>

  <<if $eule is 1>>
    <model-viewer id="model-viewer" src="models/setup.3/setup.3.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/setup.3/setup.3.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a zombie" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

  <<if $pferd is 1>>
    <model-viewer id="model-viewer" src="models/setup.3/setup.3.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/setup.3/setup.3.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

  <<if $zebra is 1>>
    <model-viewer id="model-viewer" src="models/zebra/zebra.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/zebra/zebra.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

  <<if $schildkröte is 1>>
    <model-viewer id="model-viewer" src="models/schildkroete/schildkroete.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/schildkroete/schildkroete.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

  <<if $schlange is 1>>
    <model-viewer id="model-viewer" src="models/schlange/schlange.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/schlange/schlange.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

  <<if $ozelot is 1>>
    <model-viewer id="model-viewer" src="models/ozelot/ozelot.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/ozelot/ozelot.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

  <<if $truthahn is 1>>
    <model-viewer id="model-viewer" src="models/truthahn/truthahn.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/truthahn/truthahn.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

  <<if $katze is 1>>
    <model-viewer id="model-viewer" src="models/katze/katze.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/katze/katze.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

  <<if $schwein is 1>>
    <model-viewer id="model-viewer" src="models/schwein/schwein.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/schwein/schwein.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

  <<if $krokodil is 1>>
    <model-viewer id="model-viewer" src="models/krokodil/krokodil.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/krokodil/krokodil.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

  <<if $lama is 1>>
    <model-viewer id="model-viewer" src="models/lama/lama.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/lama/lama.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

  <<if $gazelle is 1>>
    <model-viewer id="model-viewer" src="models/gazelle/gazelle.glb" ar auto-rotate poster="images/loading.png"
                ios-src="models/gazelle/gazelle.usdz"
      autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
      alt="A 3D model of a" camera-controls>
      <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
  <</if>>

</div>

<div class="btn-group">
  <<button "Zurück" `previous()`>>
    <<audio "click" play>>
  <</button>>
</div>


:: StoryCaption {"position":"800,200","size":"100,100"}
  <<set $menuText = setup.text['StoryCaption'][1][setup.i18n.langs[settings.lang]]>>
  <<set $pointsText = setup.text['StoryCaption'][2][setup.i18n.langs[settings.lang]]>>
  <<set $runesText = setup.text['StoryCaption'][3][setup.i18n.langs[settings.lang]]>>
  <h1>$menuText</h1>
  <h5>$pointsText</h5>
  <h3>$points/210</h3>
  <h5>$runesText</h5>
  <p class="p1">
    <<set _letters to ["R", "O", "S", "A", "L", "I", "E"]>>
    <<for _i, _name range _letters>>
      <<if $letter[_i] is 1>>
        _name
      <<else>>
        _
      <</if>>
    <</for>>
  </p>

:: StoryHeader {"position":"600,200","size":"100,100"}



:: StoryInit {"position":"400,200","size":"100,100"}
-------------------------SETUP-------------------------------

<<set $is_pwa to window.matchMedia('(display-mode: window-controls-overlay)').matches || window.matchMedia('(display-mode: fullscreen)').matches>>
<<set
 $is_safari to navigator.userAgent.indexOf('Safari') > -1 && 
navigator.userAgent.indexOf('Chrome') <= -1 && navigator.userAgent.indexOf("Edg") <= -1 &&
navigator.userAgent.indexOf('SamsungBrowser') <= - 1>>
<<set $is_chrome to navigator.userAgent.indexOf('Chrome') > 
-1 && navigator.userAgent.indexOf("Edg") <= -1 &&
navigator.userAgent.indexOf('SamsungBrowser') <= - 1>>

-------------------------LANGUAGE-------------------------------
<<widget "txt">>
	<<if ndef _txtCount>>
		<<set _txtCount = 0>>
	<</if>>
	<<if $args.raw === "">>
		<<set _txtOutput = setup.text[passage()][++_txtCount][setup.i18n.langs[settings.lang]]>>
		<<if def _txtOutput>>
			_txtOutput
		<<else>>
			<<= setup.text[passage()][_txtCount]["de"]>>
		<</if>>
	<<else>>
		<<set _txtOutput = setup.text[passage()][$args.raw][setup.i18n.langs[settings.lang]]>>
		<<if def _txtOutput>>
			_txtOutput
		<<else>>
			<<= setup.text[passage()][$args.raw]["de"]>>
		<</if>>
	<</if>>
<</widget>>

--------------------------AUDIO---------------------------------------

<<cacheaudio "bg" "audio/bg.mp3">>

<<cacheaudio "click" "audio/click.mp3">>

<<cacheaudio "ring" "audio/ring.mp3">>

-------------------------STARTVARIABLEN-------------------------------
<<set $hotspot to 0>>

<<set $letter to [0, 0, 0, 0, 0, 0, 0]>>

<<set $maptip to 0>>

<<set $setup to 0>>
<<set $intro to 0>>

<<set $points to 0>>

<<set $riddle to 1>>

<<set $ende to 0>>

<<set $flamingo to 0>>

<<set $affe to 0>>

<<set $eule to 1>>

<<set $krokodil to 0>>

<<set $zebra to 0>>

<<set $pferd to 0>>

<<set $gazelle to 0>>

<<set $schlange to 0>>

<<set $schildkroete to 0>>

<<set $katze to 0>>

<<set $ozelot to 0>>

<<set $schwein to 0>>

<<set $lama to 0>>

<<set $truthahn to 0>>


:: StoryMenu {"position":"198,200","size":"100,100"}
<<set $inventory = setup.text['StoryMenu'][1][setup.i18n.langs[settings.lang]]>>
<<set $help = setup.text['StoryMenu'][2][setup.i18n.langs[settings.lang]]>>
<<set $legal = setup.text['StoryMenu'][3][setup.i18n.langs[settings.lang]]>>
<<link [[$inventory|"Inventar"]]>><<addclass "#ui-bar" "stowed">><</link>>
/* <<link [[$help|"Hilfe"]]>><<addclass "#ui-bar" "stowed">><</link>> */
/* <<link [[$legal|"Impressum"]]>><<addclass "#ui-bar" "stowed">><</link>> */
 <<link "Dev">><<addclass "#ui-bar" "stowed">><<goto "Dev">><</link>>


:: ar.init {"position":"1500,1000","size":"100,100"}



:: end.init {"position":"1500,1200","size":"100,100"}



:: hotspot.1.init {"position":"1500,800","size":"100,100"}



:: hotspot.3.init {"position":"1500,1200","size":"100,100"}



:: intro {"position":"800,600","size":"100,100"}
<script>
  $('#story').attr('style', 'background-image:url(images/kapitel.jpg)');
</script>

<<set $setup to 1>>

<div class="wrapper">
<br>
<br>
<br>
  <h1>Einführung</h1>
  <h2>Ablauf, Dauer & Teams.</h2>
  <p class="p3">intro</p>
</div>

  <div class="btn-group">
<button class="next">[[|intro.1]]<<audio "click" play>></button>
  </div>


:: intro.1 {"position":"800,800","size":"100,100"}
<script>
    $('#story').attr('style', 'background-image:url(images/holger.bg.jpg)');
  </script>

  <div class="wrapper">
    <h1>Anruf</h1>
    <img src="images/holger.png" class="image1" />
  </div>

  <div class="btn-group">
<button class="next">[[|intro.2]]<<audio "click" play>></button>
  </div>


:: intro.2 {"position":"800,1000","size":"100,100"}
<<script>>
  window.video.showButtonsOnVideoEnd();
<</script>>

<<audio ":playing:" stop>>

  <video autoplay muted id="myVideo" playsinline>
    <source src="videos/intro.2.mp4" type="video/mp4">
  </video>

  <div class="wrapper"></div>

  <div class="btn-group">
    <button class="retry">[[|intro.2]]<<audio "click" play>></button>
    <button class="next">[[|intro.3]]<<audio "click" play>></button>
  </div>


:: intro.3 {"position":"800,1200","size":"100,100"}
<<script>>
  window.video.showButtonsOnVideoEnd();
<</script>>

<<audio ":playing:" stop>>

  <video autoplay muted id="myVideo" playsinline>
    <source src="videos/intro.3.mp4" type="video/mp4">
  </video>

  <div class="wrapper">
  </div>

  <div class="btn-group">
    <button class="return">[[|intro.2]]<<audio "click" play>></button>
    <button class="retry">[[|intro.3]]<<audio "click" play>></button>
    <button class="next">[[|intro.4]]<<audio "click" play>></button>
  </div>


:: intro.4 {"position":"800,1400","size":"100,100"}
<<script>>
  window.video.showButtonsOnVideoEnd();
<</script>>

<<audio ":playing:" stop>>

  <video autoplay muted id="myVideo" playsinline>
    <source src="videos/intro.4.mp4" type="video/mp4">
  </video>

  <div class="wrapper"></div>

  <div class="btn-group">
    <button class="return">[[|intro.3]]<<audio "click" play>></button>
    <button class="retry">[[|intro.4]]<<audio "click" play>></button>
    <button class="next">[[|intro.6]]<<audio "click" play>></button>
  </div>


:: intro.5 {"position":"800,1600","size":"100,100"}
<<audio ":playing:" stop>>

  <video autoplay muted id="myVideo" playsinline>
    <source src="videos/teams.mp4" type="video/mp4">
  </video>

  <div class="wrapper"></div>

  <div class="btn-group">
    <button class="return">[[|intro.4]]<<audio "click" play>></button>
    <button class="retry">[[|intro.5]]<<audio "click" play>></button>
    <button class="next">[[|intro.6]]<<audio "click" play>></button>
  </div>


:: intro.6 {"position":"800,1800","size":"100,100"}
<<audio ":playing:" stop>>

<<set $intro to 1>>

  <video autoplay muted id="myVideo" playsinline>
    <source src="videos/intro.6.mp4" type="video/mp4">
  </video>

  <div class="wrapper"></div>

  <div class="btn-group">
    <button class="return">[[|intro.4]]<<audio "click" play>></button>
    <button class="retry">[[|intro.6]]<<audio "click" play>></button>
    <button class="next">[[|kapitel.init]]<<audio "click" play>></button>
  </div>


:: kapitel.1 {"position":"1100,600","size":"100,100"}
<script>
  $('#story').attr('style', 'background-image:url(images/kapitel.jpg)');
</script>

<div class="wrapper">
<br>
<br>
<br>
  <h1>Kapitel 1</h1>
  <h2>Paranormale Aktivitäten</h2>
  <p class="p3">apitel</p>
</div>

  <div class="btn-group">
<button class="next">[[|map.init]]<<audio "click" play>></button>
  </div>


:: kapitel.init {"position":"1100,500","size":"100,100"}
<<if $setup is 1>>
	<<goto "intro">>
<<elseif $setup is 1 and $intro is 1>>
	<<goto "kapitel.1">>
<<else>>
	<<goto "vorstellung">>
<</if>>


:: map.init {"position":"1300,500","size":"100,100"}
<<if !$letter.includes(0) and $ende is 0>>
	<<goto "end.init">>
<<else>>
	<<goto "mapbox">>
<</if>>


:: mapbox [autosave] {"position":"1300,600","size":"100,100"}
<div id="map"></div>

<<script>>
  $(document).one(":passagedisplay", function() {
    setup.mapboxLoaded.then(function () {
      mapboxgl.accessToken = getAccessToken();

      const map = new mapboxgl.Map({
        container: 'map',
        style: getStyle(),
      });

      const geolocate = new mapboxgl.GeolocateControl(window.geolocation.getGeolocateControl());

      map.addControl(geolocate);
      const locations= getLocations();
      const remainingLocations = locations.filter(f => !f.alreadyEntered);

      geolocate.on('geolocate', ({ coords }) => {
        const lat = coords.latitude;
        const lon = coords.longitude;

        for (const location of remainingLocations) {
          if (window.geolocation.inside(location.latitude, location.longitude, location.radius, lat, lon)) {
            map.setPaintProperty( location.id, 'fill-color', '#FFDE03');

            map.on('click', location.id, (e) => {
              locations.find(f => f.id === location.id).alreadyEntered = true;
              $.wiki('<<goto "1.0">>');
            });

          } else {
            map.setPaintProperty( location.id, 'fill-color', 'black');
          }
        }
      });

      /* Beim Laden der Karte wird der Geolocate Button automatisch geklickt. Dadurch muss der User nicht immer manuell klicken.*/
      map.on('load', () => {
        renderMap();
        $(".mapboxgl-ctrl-geolocate").click();
      });

      function renderMap() {
        map.resize();
        for (const location of remainingLocations) {
          map.addSource( location.id, window.geolocation.createGeoJSONCircle([ location.longitude, location.latitude], location.radius / 1000));

          map.addLayer({
            'id': location.id,
            'type': 'fill',
            'source': location.id,
            'layout': {},
            'paint': {
              'fill-color': 'black',
              'fill-opacity': 0.7
            }
          });
        }
      };
    })
  });
<</script>>

<div class="wrapper" style="z-index: unset"></div>

<div class="btn-group">
  
    <<if $maptip is 0>> 
      <span id="heading"><h2><<txt>></h2>
        <<button "Weiter">>
          <<replace "#heading">>
            <h2><<txt>></h2>
            <<button "Weiter">>
              <<replace "#heading">>
                <h2><<txt>></h2>
              <</replace>>
              <<audio "click" play>>
            <</button>>
          <</replace>>
          <<audio "click" play>><<set $maptip to 1>>
        <</button>>
      </span>
    <</if>>
  
</div>


:: quiz.init {"position":"1500,1400","size":"100,100"}



:: reward.init {"position":"1500,1600","size":"100,100"}



:: setup.0 {"position":"500,600","size":"100,100"}
<<script>>
  if (State.variables.is_pwa) {
    $.wiki('<<goto "kapitel.init">>')
  };

  $('#story').attr('style', 'background-image:url(images/kapitel.jpg)');

  window.addEventListener('beforeinstallprompt', (event) => {
    event.preventDefault();
    console.log('👍', 'beforeinstallprompt', event);
    window.deferredPrompt = event;
  });
<</script>>

<div class="wrapper">
  <h1>Version 0.1</h1>
  <h2><<txt>></h2>
  <p class="p3">spui</p>
</div>

<div class="btn-group">
  <button class="next">[[|setup.1]]</button>
</div>


:: setup.1 {"position":"500,800","size":"100,100"}
<<script>>
  $('#story').attr('style', 'background-image:url(images/kapitel.jpg)');

  if (State.variables.is_safari || State.variables.is_chrome) {
    $.wiki('<<goto "setup.2">>')
  };
<</script>>
<div class="wrapper">
  <h1>Browser Check</h1>
  <h2>Bitte benutze entweder den Chrome Browser (Android) oder Safari (iOS) um diesen Link zu öffnen.</h2>
</div>


:: setup.2 {"position":"500,1500","size":"100,100"}
<<script>>
$(document).one(":passagedisplay", function() {
  $('#story').attr('style', 'background-image:url(images/kapitel.jpg)');
  const installBtn = document.querySelector('.install');
  const iosHelp = document.querySelector('.iosHelp');
  const androidHelp = document.querySelector('.androidHelp');

  if (State.variables.is_safari) {
    installBtn.style.display = 'none';
    androidHelp.style.display = 'none';
  } else if (State.variables.is_chrome) {
    iosHelp.style.display = 'none';
  };

  installBtn.addEventListener('click', async () => {
    console.log('👍', 'installBtn-clicked');
    const promptEvent = window.deferredPrompt;
    if (!promptEvent) {
      /* The deferred prompt isn't available. */
      return;
    }
    /* Show the install prompt. */
    promptEvent.prompt();
    /* Log the result */
    const result = await promptEvent.userChoice;
    console.log('👍', 'userChoice', result);
    /* Reset the deferred prompt variable, since */
    /* prompt() can only be called once. */
    window.deferredPrompt = null;
  });

  window.addEventListener('appinstalled', (event) => {
    window.deferredPrompt = null;
    installBtn.style.display = 'none';
  });
 });
<</script>>
<div class="wrapper">
  <h1>Installation</h1>
  <h2>Bitte installiere zuerst die App.</h2>
  <h2 class="iosHelp">Tippe dafür in der Adressleiste auf „Teilen“ <img src="images/ios_share.svg" /> und danach auf "Zum Home-Bildschirm".</h2>
  <h2 class="androidHelp">Tippe dafür auf „Installieren“ <img src="images/android_install.svg" /> und folge danach der Anleitung auf dem Bildschirm.</h2>
  <h2>Verlasse den Browser und öffne die neu hinzugefügte App.</h2>
  <img src="images/icon.png" class="image1" />
</div>

<div class="btn-group">
  <button class="install"></button>
</div>


:: setup.3 {"position":"500,1700","size":"100,100"}
<<script>>
$(document).one(":passagedisplay", function() {

  setup.mapboxLoaded.then(function () {
    mapboxgl.accessToken = getAccessToken();

    const map = new mapboxgl.Map({
      container: 'map',
      style: getStyle()
    });

    const geolocate = new mapboxgl.GeolocateControl(window.geolocation.getGeolocateControl());
    map.addControl(geolocate);
    map.resize();
  });

  const geolocationBtn = document.querySelector('.geolocation');
  const settingsBtn = document.querySelector('.settings');
  const helpBtn = document.querySelector('.help');
  const nextBtn = document.querySelector('.next');
  settingsBtn.style.display = 'none';
  helpBtn.style.display = 'none';
  nextBtn.style.display = 'none';

  /* Create success callback to store values */
  const positionSuccess = function(pos) {
    console.log('👍', 'Geolocation prompt successful', pos.coords);
    $(".mapboxgl-ctrl-geolocate").click();
    geolocationBtn.style.display = 'none';
    nextBtn.style.display = 'inline';
  };

  /* Create error callback */
  const positionError = function(error) {
    alert('Bitte gib deinen Standort in den Systemeinstellungen frei');
    if (State.variables.is_safari) {
      settingsBtn.style.display = 'inline';
    }
    helpBtn.style.display = 'inline';
  };

  /* Create initial options */
  const positionOptions = {
    enableHighAccuracy: false,
    maximumAge: 30000,
    timeout: 20000
  };

  function askGeolocationPermission() {
    navigator.permissions.query({name:'geolocation'}).then(function(result) {
      if (result.state == 'granted') {
        console.log('👍', 'Geolocation permission granted');
        $(".mapboxgl-ctrl-geolocate").click();
        geolocationBtn.style.display = 'none';
        nextBtn.style.display = 'inline';
      } else if (result.state == 'prompt') {
        /* Ask for location based on callbacks and options */
        navigator.geolocation.getCurrentPosition(positionSuccess, positionError, positionOptions);
      } else if (result.state == 'denied') {
        helpBtn.style.display = 'inline';
      }
    });
  };

  geolocationBtn.onclick = function() {
    if(window.geolocation.available()) {
      askGeolocationPermission();
    }
  };
});
<</script>>
<div id="map"></div>

<div class="wrapper">
  <h1>GPS</h1>
  <h2>Wir benötigen deinen Standort, um dich zu den Geister-Hotspots zu leiten.</h2>
</div>

<div class="btn-group">
  <button class="geolocation">Standort freigeben</button>
  <button class="settings"><a href="x-apple.systempreferences:com.apple.preference.security?Privacy_LocationServices">Einstellungen öffnen</a></button>
  <button class="help"></button>
  <button class="next">[[|setup.4]]</button>
</div>


:: setup.4 {"position":"500,1900","size":"100,100"}
<<script>>
  $(document).one(":passagedisplay", function() {
    $('#story').attr('style', 'background-image:url(images/cam.jpg)');
    const helpBtn = document.querySelector('.help');
    helpBtn.style.display = 'none';

    document.querySelector("#model-viewer").addEventListener('ar-status', (event) => {
      console.log(event.detail.status)
    });
  });
<</script>>

<div class="wrapper">
  <h1>AR-Kamera</h1>
  <model-viewer id="model-viewer" src="models/setup.3/setup.3.glb" ar auto-rotate poster="models/setup.3/poster.webp" 
    autoplay environment-image="models/hanging/music_hall_01_1k.hdr"
    alt="A 3D model of a zombie" camera-controls>
    <button slot="ar-button" id="ar-button">AR-Kamera öffnen</button>
  </model-viewer>
    <h2>Wir benötigen Zugriff auf deine Kamera, um dir die Geister zu zeigen. 
  <br>
  <br>Klicke auf "AR-Kamera öffnen" und schau dir den Zombie an.
  </h2>
</div>

<div class="btn-group">
  <button class="help"></button>
  <button class="next">[[|intro]]</button>
</div>

:: vorstellung {"position":"500,1300","size":"100,100"}
<<audio ":playing:" stop>>

<<script>>
  window.video.showButtonsOnVideoEnd();
<</script>>

  <video autoplay muted id="myVideo" playsinline>
    <source src="videos/vorstellung.mp4" type="video/mp4">
  </video>

  <div class="wrapper"></div>

  <div class="btn-group">
  <button class="retry">[[|vorstellung]]<<audio "click" play>></button>
  <button class="next">[[|setup.3]]<<audio "click" play>></button>
  </div>


:: StoryScript [script]
/************
Configuration
************/
Config.saves.autosave = ["autosave"];
Config.passages.nobr = true;
Config.ui.stowBarInitially = true;

/**************************
Internationalization (i18n) 
**************************/
settings.lang = "Deutsch";
setup.i18n = {
		/* Map of language labels to codes for all supported languages */
		langs : {
			'Deutsch'  : 'de',
			'English'  : 'en',
		},

		/* Utility methods */
		codes : function () {
			return Object.keys(this.langs).map(function (label) {
				return this.langs[label];
			}, this);
		},

		labels : function () {
			return Object.keys(this.langs);
		},

		labelFromCode : function (code) {
			let label = Object.keys(this.langs).find(function (label) {
				return this.langs[label] === code;
			}, this);

			if (!label) {
				throw new Error('unknown language code "' + code + '"');
			}

			return label;
		}
	};

/* Language switching setting */
function initLanguage() {
  switch (setup.i18n.langs[settings.lang]) {
    case 'en':
      l10nStrings.identity="game",l10nStrings.aborting="Aborting",l10nStrings.cancel="Cancel",l10nStrings.close="Close",l10nStrings.ok="OK",l10nStrings.errorTitle="Error",l10nStrings.errorToggle="Toggle the error view",l10nStrings.errorNonexistentPassage='the passage "{passage}" does not exist',l10nStrings.errorSaveDiskLoadFailed="failed to load save file from disk",l10nStrings.errorSaveMissingData="save is missing required data. Either the loaded file is not a save or the save has become corrupted",l10nStrings.errorSaveIdMismatch="save is from the wrong {identity}",l10nStrings._warningIntroLacking="Your browser either lacks or has disabled",l10nStrings._warningOutroDegraded=", so this {identity} is running in a degraded mode. You may be able to continue, however, some parts may not work properly.",l10nStrings.warningNoWebStorage="{_warningIntroLacking} the Web Storage API{_warningOutroDegraded}",l10nStrings.warningDegraded="{_warningIntroLacking} some of the capabilities required by this {identity}{_warningOutroDegraded}",l10nStrings.debugBarToggle="Toggle the debug bar",l10nStrings.debugBarNoWatches="— no watches set —",l10nStrings.debugBarAddWatch="Add watch",l10nStrings.debugBarDeleteWatch="Delete watch",l10nStrings.debugBarWatchAll="Watch all",l10nStrings.debugBarWatchNone="Delete all",l10nStrings.debugBarLabelAdd="Add",l10nStrings.debugBarLabelWatch="Watch",l10nStrings.debugBarLabelTurn="Turn",l10nStrings.debugBarLabelViews="Views",l10nStrings.debugBarViewsToggle="Toggle the debug views",l10nStrings.debugBarWatchToggle="Toggle the watch panel",l10nStrings.uiBarToggle="Toggle the UI bar",l10nStrings.uiBarBackward="Go backward within the {identity} history",l10nStrings.uiBarForward="Go forward within the {identity} history",l10nStrings.uiBarJumpto="Jump to a specific point within the {identity} history",l10nStrings.jumptoTitle="Jump To",l10nStrings.jumptoTurn="Turn",l10nStrings.jumptoUnavailable="No jump points currently available…",l10nStrings.savesTitle="Saves",l10nStrings.savesDisallowed="Saving has been disallowed on this passage.",l10nStrings.savesIncapable="{_warningIntroLacking} the capabilities required to support saves, so saves have been disabled for this session.",l10nStrings.savesLabelAuto="Autosave",l10nStrings.savesLabelDelete="Delete",l10nStrings.savesLabelExport="Save to Disk…",l10nStrings.savesLabelImport="Load from Disk…",l10nStrings.savesLabelLoad="Load",l10nStrings.savesLabelClear="Delete All",l10nStrings.savesLabelSave="Save",l10nStrings.savesLabelSlot="Slot",l10nStrings.savesUnavailable="No save slots found…",l10nStrings.savesUnknownDate="unknown",l10nStrings.settingsTitle="Settings",l10nStrings.settingsOff="Off",l10nStrings.settingsOn="On",l10nStrings.settingsReset="Reset to Defaults",l10nStrings.restartTitle="Restart",l10nStrings.restartPrompt="Are you sure that you want to restart? Unsaved progress will be lost.",l10nStrings.shareTitle="Share",l10nStrings.alertTitle="Alert",l10nStrings.autoloadTitle="Autoload",l10nStrings.autoloadCancel="Go to start",l10nStrings.autoloadOk="Load autosave",l10nStrings.autoloadPrompt="An autosave exists. Load it now or go to the start?",l10nStrings.macroBackText="Back",l10nStrings.macroReturnText="Return";
      break;
    default:
      l10nStrings.identity="spiel",l10nStrings.aborting="Vorzeitig abgebrochen",l10nStrings.cancel="Abbrechen",l10nStrings.close="Schließen",l10nStrings.ok="OK",l10nStrings.errorTitle="Fehler",l10nStrings.errorToggle="Fehleransicht umschalten",l10nStrings.errorNonexistentPassage='die Passage "{passage}" existiert nicht',l10nStrings.errorSaveMissingData="Im Speicherstand fehlen benötigte Daten. Entweder ist die geladene Datei kein Speicherstand oder er ist defekt",l10nStrings.errorSaveIdMismatch="Speicherstand ist vom falschen {identity}",l10nStrings._warningIntroLacking="Dein Browser kann folgendes nicht darstellen, oder es ist deaktiviert",l10nStrings._warningOutroDegraded="; darum läuft dieses {identity} in einem heruntergesetzten Modus. Du kannst zwar fortfahren, aber manche Teile funktionieren vielleicht nicht richtig.",l10nStrings.warningNoWebStorage="{_warningIntroLacking} Das Web Storage API{_warningOutroDegraded}",l10nStrings.warningDegraded="{_warningIntroLacking} Manche Features die für dieses {identity} benötigt werden{_warningOutroDegraded}",l10nStrings.debugBarToggle="Fehlersuche-Leiste umschalten",l10nStrings.debugBarNoWatches="— kein Beobachtungswert aktiv —",l10nStrings.debugBarAddWatch="Beobachtungswert hinzufügen",l10nStrings.debugBarDeleteWatch="Beobachtungswert löschen",l10nStrings.debugBarWatchAll="Alle beobachten",l10nStrings.debugBarWatchNone="Alle löschen",l10nStrings.debugBarLabelAdd="Hinzufügen",l10nStrings.debugBarLabelWatch="Beobachten",l10nStrings.debugBarLabelTurn="Zug",l10nStrings.debugBarLabelViews="Ansichten",l10nStrings.debugBarViewsToggle="Fehlersuche-Ansichten umschalten",l10nStrings.debugBarWatchToggle="Beobachtungs-Feld umschalten",l10nStrings.uiBarToggle="Menüleiste umschalten",l10nStrings.uiBarBackward="Einen Schritt im {identity}-Ablauf zurück",l10nStrings.uiBarForward="Einen Schritt im {identity}-Ablauf nach vor",l10nStrings.uiBarJumpto="Zu einem bestimmten Punkt im {identity}-Ablauf springen",l10nStrings.jumptoTitle="Springe zu",l10nStrings.jumptoTurn="Zug",l10nStrings.jumptoUnavailable="Keine Sprungmarken verfügbar…",l10nStrings.savesTitle="Speicherstände",l10nStrings.savesDisallowed="Speichern ist in dieser Passage nicht erlaubt.",l10nStrings.savesIncapable="{_warningIntroLacking} Zum Speichern benötigte Features, darum ist es in dieser Sitzung nicht möglich, den Spielstand zu speichern.",l10nStrings.savesLabelAuto="Auto-Speicherstand",l10nStrings.savesLabelDelete="Löschen",l10nStrings.savesLabelExport="Auf Datenträger speichern…",l10nStrings.savesLabelImport="Von Datenträger laden…",l10nStrings.savesLabelLoad="Laden",l10nStrings.savesLabelClear="Alle löschen",l10nStrings.savesLabelSave="Speichern",l10nStrings.savesLabelSlot="Slot",l10nStrings.savesUnavailable="Keine Speicherslots gefunden…",l10nStrings.savesUnknownDate="unbekannt",l10nStrings.settingsTitle="Einstellungen",l10nStrings.settingsOff="Aus",l10nStrings.settingsOn="Ein",l10nStrings.settingsReset="Auf Standardwerte zurücksetzen",l10nStrings.restartTitle="Neustart",l10nStrings.restartPrompt="Bist du sicher, dass du neu starten möchtest? Nicht gespeicherter Fortschritt ginge damit verloren.",l10nStrings.shareTitle="Teilen",l10nStrings.autoloadTitle="Automatisches Laden",l10nStrings.autoloadCancel="Gehe zum Start",l10nStrings.autoloadOk="Auto-Speicherstand laden",l10nStrings.autoloadPrompt="Ein Auto-Speicherstand existiert bereits. Laden oder zurück an den Start?",l10nStrings.macroBackText="Zurück",l10nStrings.macroReturnText="";
  }

  $('html').attr('lang', setup.i18n.langs[settings.lang]);
}

function changeLanguage() {
  /* Reload the application to ensure that proper	localizations are loaded */
  window.location.reload();
}

Setting.addList('lang', {
  label    : 'Language/Sprachen',
  list     : setup.i18n.labels(),
  default  : setup.i18n.labelFromCode('de'),
  onInit   : initLanguage,
  onChange : changeLanguage
});

setup.text = getTranslations();

/*************
Mapbox imports
*************/
importStyles("https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css");
setup.mapboxLoaded = importScripts("https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js");

/*****************
Window Geolocation 
*****************/
(function () {
  
  window.geolocation = {

    available: function() {
      return ("geolocation" in navigator && typeof navigator.geolocation.getCurrentPosition === "function");
    },

		/* Optionen für Mapbox Geolocation */
    getGeolocateControl: function() {
      return {
        positionOptions: {
          enableHighAccuracy: true
        },
        trackUserLocation: true,
        showUserHeading: true
      }
    },
    
		/* Test ob eine Location innerhalb der aktuellen Geokoordinaten ist */
    inside: function(lat1, lon1, radius, lat2, lon2) {
		  const R = 6371; // Earth's radius in km
      const dLat = (lat2-lat1) * Math.PI / 180;
      const dLon = (lon2-lon1) * Math.PI / 180;
      const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
      Math.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) *
      Math.sin(dLon/2) * Math.sin(dLon/2);
      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
      const distance = R * c * 1000;
      return distance < radius;
	  },
		
    /* Erstellt einen sichtbaren Kreis um eine Location */
    createGeoJSONCircle: function(center, radius) {
      const points = 64;
      const coords = {
        latitude: center[1],
        longitude: center[0]
      };
  
      let ret = [];
      const distanceX = radius / (111.320 * Math.cos(coords.latitude * Math.PI / 180));
      const distanceY = radius / 110.574;
  
      var theta, x, y;
      for (var i = 0; i < points; i++) {
        theta = (i / points) * (2 * Math.PI);
        x = distanceX * Math.cos(theta);
        y = distanceY * Math.sin(theta);
  
        ret.push([coords.longitude + x, coords.latitude + y]);
      }
      ret.push(ret[0]);
  
      return {
        "type": "geojson",
        "data": {
          "type": "FeatureCollection",
          "features": [{
            "type": "Feature",
            "geometry": {
              "type": "Polygon",
              "coordinates": [ret]
            }
          }]
        }
      };
    }

  };

/***********
Window Video  
***********/
  window.video = {
    showButtonsOnVideoEnd: function() {
      $(document).on(":passagedisplay", function() {
        const video = document.querySelector('video');
        if (video) {
          const btnGroup = document.querySelector('.btn-group');
          if (btnGroup) btnGroup.style.display = 'none';
          video.onended = (event) => {
            if (btnGroup) btnGroup.style.display = 'inline';
          };
        };
      });
    }
  }

}());

:: StoryStylesheet [stylesheet]
@import url("https://use.typekit.net/mph1xdw.css");

:root {
  /* Primäre Farben */
  --primary-color: #000000;
  --primary-dark-color: #000000;

  /* Sekundäre Farben */
  --secondary-color: #FFDE03;
  --secondary-dark-color: ##FFDE03;

  /* Hintergrundfarben */
  --background-color: #000000;
  --background-light-color: #FFFFFF;
  --background-darken-color: #00000070;
  --background-dark-color: #44444470;

  /* Textfarben */
  --button-color: #26262670;
  --text-color: #323140;
  --text-hover-color: #F5553B;
  --text-light-color: #FFFFFF;
}

@font-face {
  font-family: asl;
  src: url(fonts/asl2.otf);
}

@font-face {
  font-family: para;
  src: url(fonts/para.otf);
}

@-webkit-keyframes fade-out {
  0% {opacity: 1;}
  100% {opacity: 0;} 
}

@keyframes fade-out {
  0% {opacity: 1;}
  100% {opacity: 0;} 
} 

/* ####################HTML ELEMENTS#################### */
html {
  height: 100%;
}

html * {
    box-sizing: border-box;
}

body {
  background-color: var(--background-color);
  color: var(--text-color);
  font-family: 'Roboto Slab', serif;	
  font-size: 16px;
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
}

audio, canvas, progress, video {
  max-width: none;
  vertical-align: middle;
}

h1 {
  color: var(--text-light-color);
  font-family: "shlop", sans-serif;
  font-size: 9vh;
  font-style: normal;
  font-weight: 400;
  line-height: 10vh;
  margin-bottom: 1rem;
  margin-left: 2vw;
  margin-right: 2vw;
  text-align: center;
  text-shadow: 3px 3px 1px black;
  word-break: keep-all;
}

h2 {
  color: var(--text-light-color);
  font-family: "myriad-pro", sans-serif;
  font-size: 3vh;
  font-style: normal;
  font-weight: 700;
  line-height: 4vh;
  margin-left: 20px;
  margin-right: 30px;
  text-align: center;
  text-shadow: 3px 3px 1px black;
  word-break: break-word;
}

h3 {
  color: var(--text-light-color);
  font-family: "myriad-pro", sans-serif;
  font-size: 4vh;
  font-weight: 900;
  line-height: 4vh;
  margin: 0;
  text-align: center;
  word-break: break-word;
}

h4 {
  color: var(--text-light-color);
  font-family: "myriad-pro", sans-serif;
  line-height: 1.5vh;
  margin-bottom: -5vh;
  margin-left: 1.5vw;
  margin-right: 2vw;
  text-align: center;
  word-break: break-word;
}

h5 {
  color: var(--text-light-color);
 font-family: "myriad-pro", sans-serif;
  font-size: 2vh;
  line-height: 2vh;
  margin-bottom: 0vh;
  margin-left: 2vw;
  margin-right: 2vw;
  text-align: center;
  word-break: break-word;
}

h6 {
  color: #F2F2F2;
  font-family: 'Caveat Brush', cursive;
  font-size: 15vh;
  font-weight: normal;
  line-height: 12vh;
  margin-bottom: 0;
  margin-bottom: 1rem;
  margin-left: 10vw;
  margin-right: 10vw;
  margin-top: 0;
  text-align: center;
  word-break: break-word;
}

p {
  color: var(--text-light-color);
  font-family: transat, sans-serif;
  font-size: 3vh;
  font-style: italic;
  font-weight: 500;
  line-height: 4vh;
  margin-left: 20px;
  margin-right: 30px;
  text-align: center;
  word-break: break-word;
}

a {
  color: var(--secondary-color);
}

a:hover {
  color: var(--secondary-color);
  text-decoration: none;
}

button {
  border-radius: 4px;
  border: 2px solid #000000; 
  display: inline-block;
  font-family: itc-benguiat-condensed, sans-serif;
  font-size: 3vh;
  font-weight: 400;
  line-height: 4vh;
  margin-top: 1vh;
  text-align: center;
  text-decoration: none;
}

button:hover {
  background-color: var(--text-hover-color);
  border-color: var(--text-hover-color);
}

details {
  width: 80%;
  margin: 0 auto ;
  background: var(--button-color);
  margin-bottom: .5rem;
  box-shadow: 0 .1rem 1rem -.5rem rgba(0,0,0,.4);
  border-radius: 5px;
  overflow: hidden;
}

summary {
  padding: 1rem;
  display: block;
  background: var(--background-dark-color);
  padding-left: 2.2rem;
  position: relative;
  cursor: pointer;
}

summary:before {
  content: '';
  border-width: .4rem;
  border-style: solid;
  border-color: transparent transparent transparent var(--background-light-color);
  position: absolute;
  top: 1.5rem;
  left: 1rem;
  transform: rotate(0);
  transform-origin: .2rem 50%;
  transition: .25s transform ease;
}

details[open] > summary:before {
  transform: rotate(90deg);
}

details summary::-webkit-details-marker {
  display:none;
}

details > ul {
  padding-bottom: 1rem;
  margin-bottom: 0;
}

/* ####################SUGARCUBE#################### */
#ui-bar {
  background-color: transparent;
  border-right: 0;
}

#ui-bar-body {
  background-color: var(--background-color);
  background-image: url('images/menu.jpg');
  background-position: center;
  border-right: solid 1px;
  height: 100%;
  margin: 0;
  width: 34vh;
}

#ui-bar-toggle {
  border: none;
  color: var(--text-light-color);
  font-size: 4vh;
  left:0;
  position: fixed;
  right: unset;
  top: 3vh;
}

#ui-bar-toggle:before {
  color: var(--secondary-color);
  content: "\e804";
}

#ui-bar-toggle:hover {
  background-color: transparent;
  border: none;
}

#ui-bar-history {
  display: none;
}

#ui-bar.stowed~#story {
  margin-left: 0;
}

#ui-bar.stowed #ui-bar-toggle:before {
  color: var(--secondary-color);
  content: "\e82e";
}

#ui-dialog-body ul {
  display: flex;
  justify-content: center;
}

#menu-item-share, #menu-item-saves {
  display: none;
}

#menu ul {
border: none;
}

#menu li a {
  border-radius: 4px;
  border: 2px solid var(--secondary-color);
  color: var(--secondary-color);
  font-family: "myriad-pro", sans-serif;
  font-size: 3vh;
  font-weight: 400;
  line-height: 4vh;
  margin-bottom: 1vh;
  text-transform: none;
}

/* ####################STORY PASSAGE#################### */
#story {
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
	height: 100%;
	margin: 0;
	padding: 4vh 0;
}

#story-title {
  display: none;
}

#passages {
  height: 100%;
}

.passage {
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: space-between;
}

/* ####################WRAPPER BUTTONS#################### */
.wrapper {
  flex-grow: 1;
  height: 100%;
  overflow: auto;
  z-index: 20;
}

.btn-group {  
  margin: 0 auto 2vh;
  text-align: center;
  z-index: 20;
}

.btn-group button {
  background: var(--background-darken-color);
  border-radius: 4px;
  border: 2px solid var(--secondary-color);
  box-shadow: 2px 2px rgba(0,0,0,0.2), 2px 2px rgba(0,0,0,0.19);
  color: var(--secondary-color);
  font-family: "myriad-pro", sans-serif;
  font-size: 4vh;
  font-weight: 400;
  margin: 1vh;
}

.macro-return {
  background: var(--background-darken-color);
  border-radius: 4px;
  border: 2px solid var(--secondary-color);
  box-shadow: 2px 2px rgba(0,0,0,0.2), 2px 2px rgba(0,0,0,0.19);
  display: inline-block;
  font-weight: 900;
  margin-top: 1vh;
  padding: 0.4em;
}

.macro-return:before, .return a:before {
  content: "\e821\00a0";
  font-family: tme-fa-icons;
  padding-left: 4px;
}

.next a:before {
  content: "\e822\00a0";
  font-family: tme-fa-icons;
  padding-left: 8px;
}

.retry a:before {
  content: "\e824\00a0";
  font-family: tme-fa-icons;
  padding-left: 8px;
}

.help:before {
	content: "\e808\00a0";
  font-family: tme-fa-icons;
  padding-left: 8px;
}

.install::before {
  content: "\e829\00a0";
  font-family: tme-fa-icons;
  padding-left: 8px;
}
/* ####################MAP#################### */

/* dvh = Dynamic View High um die komplette Höhe der Navigation Bar zu nutzen */
#map {
  bottom: 0;
  height: 100vh;
  height: 100dvh;
  position: absolute;
  top: 0;
  width: 100%;
}

/* Macht den Geolocate-Button unsichtbar */
.mapboxgl-ctrl-group button.mapboxgl-ctrl-geolocate { 
  display: none;
}
  
/* ####################MODEL VIEWER#################### */
model-viewer {
  width: 90%;
  height: 50%;
  background-color: rgba(0, 0, 0, 0.75);
  margin: 0 5%;
}

.Hotspot {
  background: #fff;
  border-radius: 32px;
  border: 0;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
  box-sizing: border-box;
  cursor: pointer;
  height: 24px;
  padding: 8px;
  position: relative;
  transition: opacity 0.3s;
  width: 24px;
}

.Hotspot:not([data-visible]) {
  background: transparent;
  border: 4px solid #fff;
  box-shadow: none;
  height: 32px;
  pointer-events: none;
  width: 32px;
}

.Hotspot:focus {
  border: 4px solid rgb(0, 128, 200);
  height: 32px;
  outline: none;
  width: 32px;
}

.Hotspot > * {
  opacity: 1;
  transform: translateY(-50%);
}

.HotspotAnnotation{
  background: #fff;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
  color: rgba(0, 0, 0, 0.8);
  display: block;
  font-family: Futura, Helvetica Neue, sans-serif;
  font-size: 18px;
  font-weight: 700;
  left: calc(100% + 1em);
  max-width: 128px;
  overflow-wrap: break-word;
  padding: 0.5em 1em;
    position: absolute;
  top: 50%;
  width: max-content;
}

.Hotspot:not([data-visible]) > * {
  opacity: 0;
  pointer-events: none;
  transform: translateY(calc(-50% + 4px));
  transition: transform 0.3s, opacity 0.3s;
}

#ar-button {
  background-image: url(./images/ar_icon.png);
  background-repeat: no-repeat;
  background-size: 20px 20px;
  background-position: 12px 50%;
  background-color: #fff;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  bottom: 16px;
  padding: 0px 16px 0px 40px;
  font-size: 14px;
  color:#4285f4;
  height: 36px;
  line-height: 36px;
  border-radius: 18px;
  border: 1px solid #DADCE0;
}

#ar-button:active {
  background-color: #E8EAED;
}

#ar-button:focus {
  outline: none;
}

#ar-button:focus-visible {
  outline: 1px solid #4285f4;
}

/* ####################PASSAGE ELEMENTS#################### */

#myVideo {
  bottom: 0;
  height: 100%;
  margin-left: 50vw;
  position: fixed;
  transform: translate(-50%);
  width: auto;
  z-index: 10;
}

.image1 {
  display: block;
  margin: 0 auto;
  width: 50%;
}

tw-hook[name="fade-out"] {
	-webkit-animation-name: fade-out;
	-webkit-animation-duration: 10s;
	-webkit-animation-fill-mode: both;
	animation-name: fade-out;
	animation-duration: 10s;
	animation-fill-mode: both;
}

.p1 {
  display: inherit;
  font-family: para;
  font-size: 4vh;
  margin-top: 1vh;
}

.p2 {
  color: var(--secondary-color);
  display: inherit;
  font-family: para;
  font-size: 10vh;
  line-height: 10vh;
  margin-left: 5vw;
  margin-right: 5vw;
}

.p3 {
    font-family: para;
  	color: var(--text-light-color);
    font-size: 4vh;
    line-height: 0vh;
    display: inherit;
    text-shadow: 3px 3px 1px black;
    letter-spacing: 3vw;
}

.hide {
  display: none;
}

.bild_ort {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
}